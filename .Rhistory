ylim = c(0,1),
main = "Histogram of $b_1$ Estimates",
xlab = "$b_1$")
abline(v=3.5,
col="red",
lwd=3,
lty="dashed")
hist(beta2_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_2$ Estimates",
xlab = "$b_2$")
abline(v=9.2,
col="red",
lwd=3,
lty="dashed")
set.seed(123)
n <- 25
x <- rnorm(n,mean=0.0,sd=1.0)
beta0 <- 1
beta1 <- 0
## x is irrelevant in this model, the data generating process is as follows:
dgp <- beta0 + beta1*x
## The residual is heteroskedastic by construction
e <- x^2*rnorm(n,mean=0.0,sd=1.0)
y <- dgp + e
model <- lm(y~x)
beta <- model$coefficients
model_sum <- summary(model)
se_beta2 <- model_sum$coefficients["x","Std. Error"]
se_beta2
#computing sigma_hat_sq
ehat <- model$residuals
sigma_hat_sq <- sum(ehat^2)/(n-2)
se2_beta2 <- sqrt(sigma_hat_sq*solve(t(x)%*%x))
se2_beta2
all.equal(se_beta2, as.numeric(se2_beta2))
S <- diag(ehat^2)
cov_white <- solve(t(x)%*%x) %*% (t(x)%*%S%*%x) %*% solve(t(x)%*%x)
se_white <- sqrt(diag(cov_white))
se_white
set.seed(1)
n <- 100
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
e <- rnorm(n, mean = 0, sd = sqrt(100))
y <- 2+3.5*x1-9.2*x2+e
lm(y ~ x1+x2)$coefficients
beta0 <- 2
beta1 <- 3.5
beta2 <- 9.2
beta<- c(beta0,beta1,beta2)
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
X <- cbind(1,x1,x2)
e <- rnorm(n, mean = 0, sd = sqrt(100))
y<- X%*%beta + e
M <- 1000
beta0_hat <- numeric(M)
beta1_hat <- numeric(M)
beta2_hat <- numeric(M)
for (i in 1:M) {
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
X <- cbind(1,x1,x2)
e <- rnorm(n, mean = 0, sd = sqrt(100))
y<- X%*%beta + e
beta_hat <-solve(t(X)%*%X)%*%t(X)%*%y
beta0_hat[i] <- beta_hat[1]
beta1_hat[i] <- beta_hat[2]
beta2_hat[i] <- beta_hat[3]
}
beta0 <- 2
beta1 <- 3.5
beta2 <- 9.2
beta<- c(beta0,beta1,beta2)
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
X <- cbind(1,x1,x2)
e <- rnorm(n, mean = 0, sd = sqrt(100))
y<- X%*%beta + e
M <- 1000
beta0_hat <- numeric(M)
beta1_hat <- numeric(M)
beta2_hat <- numeric(M)
for (i in 1:M) {
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
X <- cbind(1,x1,x2)
e <- rnorm(n, mean = 0, sd = sqrt(100))
y<- X%*%beta + e
beta_hat <-solve(t(X)%*%X)%*%t(X)%*%y
beta0_hat[i] <- beta_hat[1]
beta1_hat[i] <- beta_hat[2]
beta2_hat[i] <- beta_hat[3]
}
hist(beta1_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_1$ Estimates",
xlab = "$b_1$")
hist(beta2_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_2$ Estimates",
xlab = "$b_2$")
hist(beta1_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_1$ Estimates",
xlab = "$b_1$")
abline(v=3.5,
col="red",
lwd=3,
lty="dashed")
hist(beta2_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_2$ Estimates",
xlab = "$b_2$")
abline(v=9.2,
col="red",
lwd=3,
lty="dashed")
#| label: setup
#| include: FALSE
# install.packages("tikzDevice")
# Load the tikzDevice library
library(tikzDevice)
# Set the default graphics device to tikz for the entire document
knitr::opts_chunk$set(dev = 'tikz', fig.width = 6, fig.height = 4)
set.seed(42)
set.seed(123)
n <- 25
x <- rnorm(n,mean=0.0,sd=1.0)
beta0 <- 1
beta1 <- 0
## x is irrelevant in this model, the data generating process is as follows:
dgp <- beta0 + beta1*x
## The residual is heteroskedastic by construction
e <- x^2*rnorm(n,mean=0.0,sd=1.0)
y <- dgp + e
model <- lm(y~x)
beta <- model$coefficients
model_sum <- summary(model)
se_beta2 <- model_sum$coefficients["x","Std. Error"]
se_beta2
#computing sigma_hat_sq
ehat <- model$residuals
sigma_hat_sq <- sum(ehat^2)/(n-2)
se2_beta2 <- sqrt(sigma_hat_sq*solve(t(x)%*%x))
se2_beta2
all.equal(se_beta2, as.numeric(se2_beta2))
S <- diag(ehat^2)
cov_white <- solve(t(x)%*%x) %*% (t(x)%*%S%*%x) %*% solve(t(x)%*%x)
se_white <- sqrt(diag(cov_white))
se_white
set.seed(1)
n <- 100
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
e <- rnorm(n, mean = 0, sd = sqrt(100))
y <- 2+3.5*x1-9.2*x2+e
lm(y ~ x1+x2)$coefficients
beta0 <- 2
beta1 <- 3.5
beta2 <- 9.2
beta<- c(beta0,beta1,beta2)
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
X <- cbind(1,x1,x2)
e <- rnorm(n, mean = 0, sd = sqrt(100))
y<- X%*%beta + e
M <- 1000
beta0_hat <- numeric(M)
beta1_hat <- numeric(M)
beta2_hat <- numeric(M)
for (i in 1:M) {
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
X <- cbind(1,x1,x2)
e <- rnorm(n, mean = 0, sd = sqrt(100))
y<- X%*%beta + e
beta_hat <-solve(t(X)%*%X)%*%t(X)%*%y
beta0_hat[i] <- beta_hat[1]
beta1_hat[i] <- beta_hat[2]
beta2_hat[i] <- beta_hat[3]
}
hist(beta1_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_1$ Estimates",
xlab = "$b_1$")
hist(beta2_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_2$ Estimates",
xlab = "$b_2$")
hist(beta1_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_1$ Estimates",
xlab = "$b_1$")
abline(v=3.5,
col="red",
lwd=3,
lty="dashed")
hist(beta2_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_2$ Estimates",
xlab = "$b_2$")
abline(v=9.2,
col="red",
lwd=3,
lty="dashed")
set.seed(123)
n <- 25
x <- rnorm(n,mean=0.0,sd=1.0)
beta0 <- 1
beta1 <- 0
## x is irrelevant in this model, the data generating process is as follows:
dgp <- beta0 + beta1*x
## The residual is heteroskedastic by construction
e <- x^2*rnorm(n,mean=0.0,sd=1.0)
y <- dgp + e
model <- lm(y~x)
beta <- model$coefficients
model_sum <- summary(model)
se_beta2 <- model_sum$coefficients["x","Std. Error"]
se_beta2
#computing sigma_hat_sq
ehat <- model$residuals
sigma_hat_sq <- sum(ehat^2)/(n-2)
se2_beta2 <- sqrt(sigma_hat_sq*solve(t(x)%*%x))
se2_beta2
all.equal(se_beta2, as.numeric(se2_beta2))
S <- diag(ehat^2)
cov_white <- solve(t(x)%*%x) %*% (t(x)%*%S%*%x) %*% solve(t(x)%*%x)
se_white <- sqrt(diag(cov_white))
se_white
set.seed(1)
n <- 100
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
e <- rnorm(n, mean = 0, sd = sqrt(100))
y <- 2+3.5*x1-9.2*x2+e
lm(y ~ x1+x2)$coefficients
beta0 <- 2
beta1 <- 3.5
beta2 <- 9.2
beta<- c(beta0,beta1,beta2)
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
X <- cbind(1,x1,x2)
e <- rnorm(n, mean = 0, sd = sqrt(100))
y<- X%*%beta + e
M <- 1000
beta0_hat <- numeric(M)
beta1_hat <- numeric(M)
beta2_hat <- numeric(M)
for (i in 1:M) {
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
X <- cbind(1,x1,x2)
e <- rnorm(n, mean = 0, sd = sqrt(100))
y<- X%*%beta + e
beta_hat <-solve(t(X)%*%X)%*%t(X)%*%y
beta0_hat[i] <- beta_hat[1]
beta1_hat[i] <- beta_hat[2]
beta2_hat[i] <- beta_hat[3]
}
hist(beta1_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_1$ Estimates",
xlab = "$b_1$")
hist(beta2_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_2$ Estimates",
xlab = "$b_2$")
hist(beta1_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_1$ Estimates",
xlab = "$b_1$")
abline(v=3.5,
col="red",
lwd=3,
lty="dashed")
hist(beta2_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_2$ Estimates",
xlab = "$b_2$")
abline(v=9.2,
col="red",
lwd=3,
lty="dashed")
#| label: setup
#| include: FALSE
# install.packages("tikzDevice")
# Load the tikzDevice library
library(tikzDevice)
# Set the default graphics device to tikz for the entire document
knitr::opts_chunk$set(dev = 'tikz', fig.width = 6, fig.height = 4)
set.seed(42)
set.seed(123)
n <- 25
x <- rnorm(n,mean=0.0,sd=1.0)
beta0 <- 1
beta1 <- 0
## x is irrelevant in this model, the data generating process is as follows:
dgp <- beta0 + beta1*x
## The residual is heteroskedastic by construction
e <- x^2*rnorm(n,mean=0.0,sd=1.0)
y <- dgp + e
model <- lm(y~x)
beta <- model$coefficients
model_sum <- summary(model)
se_beta2 <- model_sum$coefficients["x","Std. Error"]
se_beta2
#computing sigma_hat_sq
ehat <- model$residuals
sigma_hat_sq <- sum(ehat^2)/(n-2)
se2_beta2 <- sqrt(sigma_hat_sq*solve(t(x)%*%x))
se2_beta2
all.equal(se_beta2, as.numeric(se2_beta2))
S <- diag(ehat^2)
cov_white <- solve(t(x)%*%x) %*% (t(x)%*%S%*%x) %*% solve(t(x)%*%x)
se_white <- sqrt(diag(cov_white))
se_white
set.seed(1)
n <- 100
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
e <- rnorm(n, mean = 0, sd = sqrt(100))
y <- 2+3.5*x1-9.2*x2+e
lm(y ~ x1+x2)$coefficients
beta0 <- 2
beta1 <- 3.5
beta2 <- 9.2
beta<- c(beta0,beta1,beta2)
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
X <- cbind(1,x1,x2)
e <- rnorm(n, mean = 0, sd = sqrt(100))
y<- X%*%beta + e
M <- 1000
beta0_hat <- numeric(M)
beta1_hat <- numeric(M)
beta2_hat <- numeric(M)
for (i in 1:M) {
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
X <- cbind(1,x1,x2)
e <- rnorm(n, mean = 0, sd = sqrt(100))
y<- X%*%beta + e
beta_hat <-solve(t(X)%*%X)%*%t(X)%*%y
beta0_hat[i] <- beta_hat[1]
beta1_hat[i] <- beta_hat[2]
beta2_hat[i] <- beta_hat[3]
}
hist(beta1_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_1$ Estimates",
xlab = "$b_1$")
hist(beta2_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_2$ Estimates",
xlab = "$b_2$")
hist(beta1_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_1$ Estimates",
xlab = "$b_1$")
abline(v=3.5,
col="red",
lwd=3,
lty="dashed")
hist(beta2_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_2$ Estimates",
xlab = "$b_2$")
abline(v=9.2,
col="red",
lwd=3,
lty="dashed")
hist(beta1_hat,
probability = T,
ylim = c(0,1000),
main = "Histogram of $b_1$ Estimates",
xlab = "$b_1$")
hist(beta2_hat,
probability = T,
ylim = c(0,1000),
main = "Histogram of $b_2$ Estimates",
xlab = "$b_2$")
hist(beta1_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_1$ Estimates",
xlab = "$b_1$")
hist(beta2_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of $b_2$ Estimates",
xlab = "$b_2$")
#| label: setup
#| include: FALSE
# install.packages("tikzDevice")
# Load the tikzDevice library
library(tikzDevice)
# Set the default graphics device to tikz for the entire document
# knitr::opts_chunk$set(dev = 'tikz', fig.width = 6, fig.height = 4)
set.seed(42)
set.seed(123)
n <- 25
x <- rnorm(n,mean=0.0,sd=1.0)
beta0 <- 1
beta1 <- 0
## x is irrelevant in this model, the data generating process is as follows:
dgp <- beta0 + beta1*x
## The residual is heteroskedastic by construction
e <- x^2*rnorm(n,mean=0.0,sd=1.0)
y <- dgp + e
model <- lm(y~x)
beta <- model$coefficients
model_sum <- summary(model)
se_beta2 <- model_sum$coefficients["x","Std. Error"]
se_beta2
#computing sigma_hat_sq
ehat <- model$residuals
sigma_hat_sq <- sum(ehat^2)/(n-2)
se2_beta2 <- sqrt(sigma_hat_sq*solve(t(x)%*%x))
se2_beta2
all.equal(se_beta2, as.numeric(se2_beta2))
S <- diag(ehat^2)
cov_white <- solve(t(x)%*%x) %*% (t(x)%*%S%*%x) %*% solve(t(x)%*%x)
se_white <- sqrt(diag(cov_white))
se_white
set.seed(1)
n <- 100
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
e <- rnorm(n, mean = 0, sd = sqrt(100))
y <- 2+3.5*x1-9.2*x2+e
lm(y ~ x1+x2)$coefficients
beta0 <- 2
beta1 <- 3.5
beta2 <- 9.2
beta<- c(beta0,beta1,beta2)
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
X <- cbind(1,x1,x2)
e <- rnorm(n, mean = 0, sd = sqrt(100))
y<- X%*%beta + e
M <- 1000
beta0_hat <- numeric(M)
beta1_hat <- numeric(M)
beta2_hat <- numeric(M)
for (i in 1:M) {
x1 <- rnorm(n, mean = 3, sd = sqrt(6))
x2 <- rnorm(n, mean = 2, sd = sqrt(4))
X <- cbind(1,x1,x2)
e <- rnorm(n, mean = 0, sd = sqrt(100))
y<- X%*%beta + e
beta_hat <-solve(t(X)%*%X)%*%t(X)%*%y
beta0_hat[i] <- beta_hat[1]
beta1_hat[i] <- beta_hat[2]
beta2_hat[i] <- beta_hat[3]
}
# Histogram of beta1_hat
hist(beta1_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of b1 Estimates",
col = "green",
xlab = "b1")
# Histogram of beta2_hat
hist(beta2_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of b2 Estimates",
col = "blue",
xlab = "b2")
# Histogram of beta1_hat
hist(beta1_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of b1 Estimates",
col = "green",
xlab = "b1")
abline(v=3.5,
col="red",
lwd=3,
lty="dashed")
# Histogram of beta2_hat
hist(beta2_hat,
probability = T,
ylim = c(0,1),
main = "Histogram of b2 Estimates",
col = "blue",
xlab = "b2")
abline(v=9.2,
col="red",
lwd=3,
lty="dashed")
